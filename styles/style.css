/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-white: hsl(0deg 0% 100%);
    --spacing: 0.25rem;
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --tracking-wider: 0.05em;
    --tracking-widest: 0.1em;
    --radius-2xl: 1rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --blur-md: 12px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-blue-dark: hsl(235deg 35% 7%);
    --color-blue-light: hsl(231deg 77% 90%);
    --font-belliefair: BellieFair;
    --font-barlowCondensed: BarlowCondensed;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .relative {
    position: relative;
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .col-end-1 {
    grid-column-end: 1;
  }
  .col-end-2 {
    grid-column-end: 2;
  }
  .row-start-1 {
    grid-row-start: 1;
  }
  .row-start-2 {
    grid-row-start: 2;
  }
  .row-end-1 {
    grid-row-end: 1;
  }
  .row-end-2 {
    grid-row-end: 2;
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-40 {
    margin-top: calc(var(--spacing) * 40);
  }
  .mr-4 {
    margin-right: calc(var(--spacing) * 4);
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-36 {
    height: calc(var(--spacing) * 36);
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .min-h-\[100vh\] {
    min-height: 100vh;
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-36 {
    width: calc(var(--spacing) * 36);
  }
  .w-70 {
    width: calc(var(--spacing) * 70);
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .max-w-160 {
    max-width: calc(var(--spacing) * 160);
  }
  .-translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-full {
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-full {
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-full {
    --tw-translate-y: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-rows-1 {
    grid-template-rows: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .content-center {
    align-content: center;
  }
  .items-baseline {
    align-items: baseline;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-items-center {
    justify-items: center;
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-y-8 {
    row-gap: calc(var(--spacing) * 8);
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/20 {
    background-color: color-mix(in srgb, hsl(0deg 0% 100%) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .bg-\[url\(\'\.\.\/assets\/crew\/background-crew-mobile\.jpg\'\)\] {
    background-image: url('../assets/crew/background-crew-mobile.jpg');
  }
  .bg-\[url\(\'\.\.\/assets\/destination\/background-destination-mobile\.jpg\'\)\] {
    background-image: url('../assets/destination/background-destination-mobile.jpg');
  }
  .bg-\[url\(\'\.\.\/assets\/home\/background-home-mobile\.jpg\'\)\] {
    background-image: url('../assets/home/background-home-mobile.jpg');
  }
  .bg-\[url\(\'\.\.\/assets\/technology\/background-technology-mobile\.jpg\'\)\] {
    background-image: url('../assets/technology/background-technology-mobile.jpg');
  }
  .bg-cover {
    background-size: cover;
  }
  .bg-center {
    background-position: center;
  }
  .bg-no-repeat {
    background-repeat: no-repeat;
  }
  .object-cover {
    object-fit: cover;
  }
  .object-bottom {
    object-position: bottom;
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-12 {
    padding-inline: calc(var(--spacing) * 12);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .text-center {
    text-align: center;
  }
  .font-belliefair {
    font-family: var(--font-belliefair);
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .text-blue-dark {
    color: var(--color-blue-dark);
  }
  .text-blue-light {
    color: var(--color-blue-light);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-0 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-white {
    --tw-ring-color: var(--color-white);
  }
  .ring-white\/20 {
    --tw-ring-color: color-mix(in srgb, hsl(0deg 0% 100%) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:bottom-0 {
    &::after {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 0);
    }
  }
  .after\:left-0 {
    &::after {
      content: var(--tw-content);
      left: calc(var(--spacing) * 0);
    }
  }
  .after\:block {
    &::after {
      content: var(--tw-content);
      display: block;
    }
  }
  .after\:h-0\.25 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 0.25);
    }
  }
  .after\:h-1 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 1);
    }
  }
  .after\:h-16 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 16);
    }
  }
  .after\:w-full {
    &::after {
      content: var(--tw-content);
      width: 100%;
    }
  }
  .after\:translate-x-\[-100\%\] {
    &::after {
      content: var(--tw-content);
      --tw-translate-x: -100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .after\:transform {
    &::after {
      content: var(--tw-content);
      transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    }
  }
  .after\:rounded-full {
    &::after {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .after\:bg-blue-light\/25 {
    &::after {
      content: var(--tw-content);
      background-color: color-mix(in srgb, hsl(231deg 77% 90%) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-blue-light) 25%, transparent);
      }
    }
  }
  .after\:bg-white {
    &::after {
      content: var(--tw-content);
      background-color: var(--color-white);
    }
  }
  .after\:bg-gradient-to-t {
    &::after {
      content: var(--tw-content);
      --tw-gradient-position: to top in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
    }
  }
  .after\:from-blue-dark {
    &::after {
      content: var(--tw-content);
      --tw-gradient-from: var(--color-blue-dark);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .after\:to-transparent {
    &::after {
      content: var(--tw-content);
      --tw-gradient-to: transparent;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .after\:transition-all {
    &::after {
      content: var(--tw-content);
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .after\:duration-500 {
    &::after {
      content: var(--tw-content);
      --tw-duration: 500ms;
      transition-duration: 500ms;
    }
  }
  .after\:ease-in-out {
    &::after {
      content: var(--tw-content);
      --tw-ease: var(--ease-in-out);
      transition-timing-function: var(--ease-in-out);
    }
  }
  .focus-within\:ring-32 {
    &:focus-within {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(32px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .hover\:bg-white\/40 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, hsl(0deg 0% 100%) 40%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 40%, transparent);
        }
      }
    }
  }
  .hover\:bg-white\/50 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, hsl(0deg 0% 100%) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
        }
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:ring-32 {
    &:hover {
      @media (hover: hover) {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(32px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:after\:translate-x-0 {
    &:hover {
      @media (hover: hover) {
        &::after {
          content: var(--tw-content);
          --tw-translate-x: calc(var(--spacing) * 0);
          translate: var(--tw-translate-x) var(--tw-translate-y);
        }
      }
    }
  }
  .hover\:after\:transform {
    &:hover {
      @media (hover: hover) {
        &::after {
          content: var(--tw-content);
          transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
        }
      }
    }
  }
  .focus-visible\:bg-white\/50 {
    &:focus-visible {
      background-color: color-mix(in srgb, hsl(0deg 0% 100%) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
      }
    }
  }
  .focus-visible\:after\:translate-x-0 {
    &:focus-visible {
      &::after {
        content: var(--tw-content);
        --tw-translate-x: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .aria-selected\:bg-white {
    &[aria-selected="true"] {
      background-color: var(--color-white);
    }
  }
  .aria-selected\:text-blue-dark {
    &[aria-selected="true"] {
      color: var(--color-blue-dark);
    }
  }
  .aria-\[selected\=true\]\:bg-white {
    &[aria-selected="true"] {
      background-color: var(--color-white);
    }
  }
  .data-\[active\=true\]\:pointer-events-auto {
    &[data-active="true"] {
      pointer-events: auto;
    }
  }
  .data-\[active\=true\]\:translate-x-0 {
    &[data-active="true"] {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[active\=true\]\:translate-y-0 {
    &[data-active="true"] {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[active\=true\]\:text-white {
    &[data-active="true"] {
      color: var(--color-white);
    }
  }
  .data-\[active\=true\]\:opacity-100 {
    &[data-active="true"] {
      opacity: 100%;
    }
  }
  .data-\[active\=true\]\:transition-all {
    &[data-active="true"] {
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .data-\[active\=true\]\:duration-500 {
    &[data-active="true"] {
      --tw-duration: 500ms;
      transition-duration: 500ms;
    }
  }
  .data-\[active\=true\]\:ease-in-out {
    &[data-active="true"] {
      --tw-ease: var(--ease-in-out);
      transition-timing-function: var(--ease-in-out);
    }
  }
  .data-\[active\=true\]\:after\:translate-x-0 {
    &[data-active="true"] {
      &::after {
        content: var(--tw-content);
        --tw-translate-x: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .data-\[outgoing\=true\]\:translate-x-\[-100\%\] {
    &[data-outgoing="true"] {
      --tw-translate-x: -100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[outgoing\=true\]\:translate-x-full {
    &[data-outgoing="true"] {
      --tw-translate-x: 100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[outgoing\=true\]\:translate-y-\[-100\%\] {
    &[data-outgoing="true"] {
      --tw-translate-y: -100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[outgoing\=true\]\:translate-y-full {
    &[data-outgoing="true"] {
      --tw-translate-y: 100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[outgoing\=true\]\:opacity-0 {
    &[data-outgoing="true"] {
      opacity: 0%;
    }
  }
  .data-\[outgoing\=true\]\:transition-all {
    &[data-outgoing="true"] {
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .data-\[outgoing\=true\]\:duration-500 {
    &[data-outgoing="true"] {
      --tw-duration: 500ms;
      transition-duration: 500ms;
    }
  }
  .data-\[outgoing\=true\]\:ease-in-out {
    &[data-outgoing="true"] {
      --tw-ease: var(--ease-in-out);
      transition-timing-function: var(--ease-in-out);
    }
  }
  .md\:col-span-2 {
    @media (width >= 48rem) {
      grid-column: span 2 / span 2;
    }
  }
  .md\:col-start-1 {
    @media (width >= 48rem) {
      grid-column-start: 1;
    }
  }
  .md\:mt-16 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 16);
    }
  }
  .md\:h-48 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 48);
    }
  }
  .md\:w-48 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 48);
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:gap-y-12 {
    @media (width >= 48rem) {
      row-gap: calc(var(--spacing) * 12);
    }
  }
  .md\:bg-\[url\(\'\.\.\/assets\/crew\/background-crew-tablet\.jpg\'\)\] {
    @media (width >= 48rem) {
      background-image: url('../assets/crew/background-crew-tablet.jpg');
    }
  }
  .md\:bg-\[url\(\'\.\.\/assets\/destination\/background-destination-tablet\.jpg\'\)\] {
    @media (width >= 48rem) {
      background-image: url('../assets/destination/background-destination-tablet.jpg');
    }
  }
  .md\:bg-\[url\(\'\.\.\/assets\/home\/background-home-tablet\.jpg\'\)\] {
    @media (width >= 48rem) {
      background-image: url('../assets/home/background-home-tablet.jpg');
    }
  }
  .md\:bg-\[url\(\'\.\.\/assets\/technology\/background-technology-tablet\.jpg\'\)\] {
    @media (width >= 48rem) {
      background-image: url('../assets/technology/background-technology-tablet.jpg');
    }
  }
  .md\:px-8 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .md\:px-24 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 24);
    }
  }
  .md\:py-16 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .md\:py-32 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 32);
    }
  }
  .md\:pt-16 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 16);
    }
  }
  .md\:pt-32 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 32);
    }
  }
  .md\:pb-12 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 12);
    }
  }
  .md\:text-start {
    @media (width >= 48rem) {
      text-align: start;
    }
  }
  .lg\:col-span-5 {
    @media (width >= 64rem) {
      grid-column: span 5 / span 5;
    }
  }
  .lg\:col-start-1 {
    @media (width >= 64rem) {
      grid-column-start: 1;
    }
  }
  .lg\:col-start-2 {
    @media (width >= 64rem) {
      grid-column-start: 2;
    }
  }
  .lg\:col-start-3 {
    @media (width >= 64rem) {
      grid-column-start: 3;
    }
  }
  .lg\:col-start-7 {
    @media (width >= 64rem) {
      grid-column-start: 7;
    }
  }
  .lg\:row-span-2 {
    @media (width >= 64rem) {
      grid-row: span 2 / span 2;
    }
  }
  .lg\:row-start-1 {
    @media (width >= 64rem) {
      grid-row-start: 1;
    }
  }
  .lg\:row-end-5 {
    @media (width >= 64rem) {
      grid-row-end: 5;
    }
  }
  .lg\:mt-0 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .lg\:mb-4 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 4);
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:h-5 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 5);
    }
  }
  .lg\:h-20 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 20);
    }
  }
  .lg\:h-full {
    @media (width >= 64rem) {
      height: 100%;
    }
  }
  .lg\:w-5 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 5);
    }
  }
  .lg\:w-20 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 20);
    }
  }
  .lg\:w-full {
    @media (width >= 64rem) {
      width: 100%;
    }
  }
  .lg\:max-w-90 {
    @media (width >= 64rem) {
      max-width: calc(var(--spacing) * 90);
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-4 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-11 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(11, minmax(0, 1fr));
    }
  }
  .lg\:flex-col {
    @media (width >= 64rem) {
      flex-direction: column;
    }
  }
  .lg\:items-end {
    @media (width >= 64rem) {
      align-items: flex-end;
    }
  }
  .lg\:items-start {
    @media (width >= 64rem) {
      align-items: flex-start;
    }
  }
  .lg\:items-stretch {
    @media (width >= 64rem) {
      align-items: stretch;
    }
  }
  .lg\:justify-end {
    @media (width >= 64rem) {
      justify-content: flex-end;
    }
  }
  .lg\:justify-start {
    @media (width >= 64rem) {
      justify-content: flex-start;
    }
  }
  .lg\:justify-items-start {
    @media (width >= 64rem) {
      justify-items: start;
    }
  }
  .lg\:gap-16 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 16);
    }
  }
  .lg\:gap-x-6 {
    @media (width >= 64rem) {
      column-gap: calc(var(--spacing) * 6);
    }
  }
  .lg\:gap-y-0 {
    @media (width >= 64rem) {
      row-gap: calc(var(--spacing) * 0);
    }
  }
  .lg\:self-center {
    @media (width >= 64rem) {
      align-self: center;
    }
  }
  .lg\:bg-\[url\(\'\.\.\/assets\/crew\/background-crew-desktop\.jpg\'\)\] {
    @media (width >= 64rem) {
      background-image: url('../assets/crew/background-crew-desktop.jpg');
    }
  }
  .lg\:bg-\[url\(\'\.\.\/assets\/destination\/background-destination-desktop\.jpg\'\)\] {
    @media (width >= 64rem) {
      background-image: url('../assets/destination/background-destination-desktop.jpg');
    }
  }
  .lg\:bg-\[url\(\'\.\.\/assets\/home\/background-home-desktop\.jpg\'\)\] {
    @media (width >= 64rem) {
      background-image: url('../assets/home/background-home-desktop.jpg');
    }
  }
  .lg\:bg-\[url\(\'\.\.\/assets\/technology\/background-technology-desktop\.jpg\'\)\] {
    @media (width >= 64rem) {
      background-image: url('../assets/technology/background-technology-desktop.jpg');
    }
  }
  .lg\:p-12 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 12);
    }
  }
  .lg\:px-32 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 32);
    }
  }
  .lg\:px-36 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 36);
    }
  }
  .lg\:py-4 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .lg\:py-32 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 32);
    }
  }
  .lg\:pt-0 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  .lg\:pb-0 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 0);
    }
  }
  .lg\:pl-32 {
    @media (width >= 64rem) {
      padding-left: calc(var(--spacing) * 32);
    }
  }
  .lg\:text-start {
    @media (width >= 64rem) {
      text-align: start;
    }
  }
  .lg\:text-6xl {
    @media (width >= 64rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .lg\:text-lg {
    @media (width >= 64rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .xl\:max-w-160 {
    @media (width >= 80rem) {
      max-width: calc(var(--spacing) * 160);
    }
  }
  .xl\:justify-self-end {
    @media (width >= 80rem) {
      justify-self: flex-end;
    }
  }
}
@font-face {
  font-family: BellieFair;
  src: url(../assets/shared/font/Bellefair/Bellefair-Regular.ttf);
}
@font-face {
  font-family: BarlowCondensed;
  src: url(../assets/shared/font/Barlow_Condensed/BarlowCondensed-Regular.ttf);
}
@font-face {
  font-family: Barlow;
  src: url(../assets/shared/font/Barlow/Barlow-Regular.ttf);
}
html, body {
  height: 100%;
  width: 100%;
  position: relative;
  font-family: Barlow;
  font-size: 15px;
  color: var(--color-white);
  @media (width >= 48rem) {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
}
main {
  width: 100%;
  overflow-x: hidden;
}
.heading-main {
  font-family: var(--font-belliefair);
  font-size: 56px;
  @media (width >= 48rem) {
    font-size: 100px;
  }
  @media (width >= 64rem) {
    font-size: 144px;
  }
}
.heading-section {
  font-family: var(--font-belliefair);
  font-size: var(--text-6xl);
  line-height: var(--tw-leading, var(--text-6xl--line-height));
}
.sub-heading {
  font-family: var(--font-barlowCondensed);
  font-size: 20px;
  --tw-tracking: 2px;
  letter-spacing: 2px;
  @media (width >= 48rem) {
    font-size: 28px;
  }
  @media (width >= 64rem) {
    --tw-tracking: 4px;
    letter-spacing: 4px;
  }
}
.distance {
  font-family: var(--font-belliefair);
  font-size: var(--text-3xl);
  line-height: var(--tw-leading, var(--text-3xl--line-height));
}
.caption {
  font-family: var(--font-barlowCondensed);
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
  --tw-tracking: var(--tracking-wider);
  letter-spacing: var(--tracking-wider);
}
.tab {
  font-family: var(--font-barlowCondensed);
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
  --tw-tracking: var(--tracking-widest);
  letter-spacing: var(--tracking-widest);
}
.nav {
  position: relative;
  display: flex;
  width: 100%;
  align-items: center;
  justify-content: space-between;
  padding-inline: calc(var(--spacing) * 6);
  padding-block: calc(var(--spacing) * 4);
  @media (width >= 48rem) {
    gap: calc(var(--spacing) * 8);
  }
  @media (width >= 48rem) {
    padding-block: calc(var(--spacing) * 0);
  }
  @media (width >= 48rem) {
    padding-right: calc(var(--spacing) * 0);
  }
  @media (width >= 48rem) {
    padding-left: calc(var(--spacing) * 8);
  }
  @media (width >= 64rem) {
    padding-block: calc(var(--spacing) * 12);
  }
  @media (width >= 64rem) {
    padding-left: calc(var(--spacing) * 16);
  }
  .nav__logo {
    width: calc(var(--spacing) * 9);
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 10);
    }
  }
  .nav__toggler {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .nav__toggler button img {
    width: calc(var(--spacing) * 6);
    cursor: pointer;
  }
  .nav__menu {
    position: absolute;
    top: calc(var(--spacing) * 0);
    right: calc(var(--spacing) * 0);
    z-index: 10;
    height: 100vh;
    width: calc(var(--spacing) * 70);
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    background-color: color-mix(in srgb, hsl(0deg 0% 100%) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
    padding-block: calc(var(--spacing) * 4);
    opacity: 0%;
    --tw-backdrop-blur: blur(var(--blur-md));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 500ms;
    transition-duration: 500ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    @media (width >= 48rem) {
      position: static;
    }
    @media (width >= 48rem) {
      height: fit-content;
    }
    @media (width >= 48rem) {
      width: 100%;
    }
    @media (width >= 48rem) {
      --tw-translate-x: calc(var(--spacing) * 0);
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 0);
    }
    @media (width >= 48rem) {
      opacity: 100%;
    }
    @media (width >= 64rem) {
      position: relative;
    }
    @media (width >= 64rem) {
      width: fit-content;
    }
    @media (width >= 64rem) {
      padding-right: calc(var(--spacing) * 32);
    }
    @media (width >= 64rem) {
      padding-left: calc(var(--spacing) * 20);
    }
    @media (width >= 64rem) {
      &::before {
        content: var(--tw-content);
        position: absolute;
      }
    }
    @media (width >= 64rem) {
      &::before {
        content: var(--tw-content);
        top: calc(1/2 * 100%);
      }
    }
    @media (width >= 64rem) {
      &::before {
        content: var(--tw-content);
        left: -54%;
      }
    }
    @media (width >= 64rem) {
      &::before {
        content: var(--tw-content);
        height: calc(var(--spacing) * 0.25);
      }
    }
    @media (width >= 64rem) {
      &::before {
        content: var(--tw-content);
        width: calc(3/5 * 100%);
      }
    }
    @media (width >= 64rem) {
      &::before {
        content: var(--tw-content);
        background-color: color-mix(in srgb, hsl(231deg 77% 90%) 25%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-blue-light) 25%, transparent);
        }
      }
    }
  }
  .nav__menu--active {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    opacity: 100%;
    &::before {
      content: var(--tw-content);
      position: fixed;
    }
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0);
    }
    &::before {
      content: var(--tw-content);
      left: -100%;
    }
    &::before {
      content: var(--tw-content);
      z-index: calc(2 * -1);
    }
    &::before {
      content: var(--tw-content);
      display: block;
    }
    &::before {
      content: var(--tw-content);
      height: 100%;
    }
    &::before {
      content: var(--tw-content);
      width: 100%;
    }
    &::before {
      content: var(--tw-content);
      background-color: color-mix(in srgb, hsl(0deg 0% 100%) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .nav__menu__close {
    float: right;
    margin-right: calc(var(--spacing) * 8);
    cursor: pointer;
    @media (width >= 48rem) {
      display: none;
    }
  }
  .nav__menu ol {
    margin-top: calc(var(--spacing) * 20);
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: calc(var(--spacing) * 8);
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 0);
    }
    @media (width >= 48rem) {
      width: 100%;
    }
    @media (width >= 48rem) {
      flex-direction: row;
    }
    @media (width >= 48rem) {
      align-items: center;
    }
    @media (width >= 48rem) {
      justify-content: flex-end;
    }
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 6);
    }
    counter-reset: item -1;
  }
  .nav__menu li {
    position: relative;
    width: 100%;
    cursor: pointer;
    overflow: hidden;
    padding-left: calc(var(--spacing) * 8);
    font-family: var(--font-barlowCondensed);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
    color: var(--color-blue-light);
    text-transform: uppercase;
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
    @media (width >= 48rem) {
      width: fit-content;
    }
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .nav__menu li a::before {
    margin-right: calc(var(--spacing) * 4);
    display: inline-block;
    width: fit-content;
    font-family: var(--font-barlowCondensed);
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
    color: var(--color-white);
    content: "0"counter(item);
    counter-increment: item;
  }
  .nav__menu li a {
    display: block;
    height: 100%;
    width: 100%;
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    @media (width >= 48rem) {
      width: fit-content;
    }
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 8);
    }
  }
  .nav__menu li::after {
    content: " ";
    position: absolute;
    right: calc(var(--spacing) * 0);
    bottom: calc(var(--spacing) * 0);
    height: 100%;
    width: calc(var(--spacing) * 1);
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    border-radius: var(--radius-2xl);
    background-color: var(--color-white);
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 500ms;
    transition-duration: 500ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 2);
    }
    @media (width >= 48rem) {
      width: 100%;
    }
    @media (width >= 48rem) {
      --tw-translate-x: -100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    @media (width >= 48rem) {
      --tw-translate-y: calc(var(--spacing) * -0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .nav__menu li:has(a:focus-visible) {
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
    outline-color: color-mix(in srgb, hsl(231deg 77% 90%) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--color-blue-light) 50%, transparent);
    }
  }
  .nav__menu li:has(a:focus-visible)::after, .nav__menu li:hover::after, .nav__menu li.active::after {
    --tw-translate-y: calc(var(--spacing) * -0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    @media (width >= 48rem) {
      --tw-translate-x: calc(var(--spacing) * -0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
}
@media (prefers-reduced-motion: reduce) {
  *, *::after, *::before {
    transition-property: none;
    --tw-duration: 0ms;
    transition-duration: 0ms;
    animation-duration: 0s;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-tracking: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-outline-style: solid;
    }
  }
}
